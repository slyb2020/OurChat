# _*_ coding: UTF-8 _*_
# version 0.20200709:
import wx.adv

from MainFrame import *


# 1. 初始构建MyFrame主窗口类，包含登录菜单及未登录菜单，历史聊天记录文本框，当前聊天内容文本框，发送按钮及状态栏
# 2. 初始构建CheckinDialog类，实现基本的密码登录功能，根据登录情况实现动态菜单切换及状态栏信息提示
# Version 0.20200709B:
# 1. 加入VERSION变量，处理版本信息
# 2. 新建ID_DEFINE.py文件，统一存放工程全局变量
# 3. 主窗口类中增加对wx.ID_EXIT菜单事件的处理
# 4. 建立MySQL数据库类，用于处理程序与数据库之间的数据读写
# 5. 将用户名和密码列表改为从数据库读取
# 6. 登录后能从数据库中读取历史对话数据并在historyMessageTXT中显示
# 7. 通过秒级时钟事件，实现对historyMessageTXT显示内容的不断更新
# Version 0.20200709D:
# 1. 通过建立了一个新的线程，解决了数据更新使主证程序运行卡顿的问题
# 2. 通过为CheckinDialog类增加COMBOBOX事件的处理函数，解决了更改用户名时，password输入框失去焦点的问题
# Version 0.20200710A:
# 1. 通过本地配置文件setup.cfg, 实现诸如切换默认用户等功能
# 2. 增加设置菜单，可以修改用户密码，并没有全做完
# Version 0.20200710B:
# 1. 发现0710A存在BUG: 用户在登出瞬间如果程序接收到新的message，新的message有可能会显示在未登录界面的historyMessageTXT控件里
# 根据现象分析，故障原因应该是在登出状态下，程序仍可接受EVT_UPDATE_NEWMESSAGES事件，并进行相应的显示处理
# 解决方法，在EVT_UPDATE_NEWMESSAGES事件的处理方法中最开始的地方加入对historyMessageTXT控件的IsEnable判断，True：更新，False：不更新
# Version 0.20200710C:
# 1. 整理MyFrame类构造函数结构，使其更加的规范、易读
# 2. 针对历史消息过多时，历史消息控件初始显示消息时屏幕滚动显示显得闪烁严重的问题，通过增加Freeze和Thaw方法进行解决
# 3. 给historyMessageTXT增加READONLY属性
# 4. 在登录状态下增加了系统设置菜单，并能弹出系统参数设置对话框，但因为目前没仔细整理其内的功能，所以操作会报错
# Version 0.20200710D:
# 1. 构造修改用户密码对话框类，完成修改用户密码功能，但细节仍需完善！比如增加Verify()功能,完善信息提示等
# Version 0.20200710E:
# 1. 构建Sash窗口结构
# 2. 增加了图标显示功能
# Version 0.20200711A:
# 1. 构建1个新类，用于显示用户头像，用户名（昵称），最新消息，以及新消息个数等信息，选中状态是PANEL背景色加深，不选中时背景色变浅
# Version 0.20200711B:
# 1. 实现了点对点的通讯和信息显示刷新及存储，但切换聊天对象时因为采用的是从云端数据库读取数据的方法，所以会有短时的界面等待，微信采用的是建立本地的缓存技术，目前先暂不实现
# 2. 发现登录后状态栏提示的登录用户名信息有bug，原来是语句顺序的问题，改了
# 3. 发现登录后如果不选中任何对象进行聊天直接登出的话，会报错，因为有些控件没初始化，通过try指令解决了
# Version 0.20200711C:
# 1. 在数据库中增加对时间戳信息的处理功能
# 2. 在用户数据库中增加好友列表字段，并根据此字段获得好友列表，中间面板根据好友列表来初始化界面
# 3. 增加了一个新的线程，用于处理middle面板的ChatIcon信息（最新消息，时间及新消息数）的实时更新
# 4. 关闭Windows之前一定要先关闭线程，否则会报错，已解决，但还应该看一下线程的例程
# 5. 现在middlePanel线程工作太频繁，需要考虑通过定时器每隔一个设定好的时间启动一次线程，在好友列表中检查一圈后自动停止
# 6. 现在还需要增加一个方法，在打开和具体朋友的对话框之后，将所有与他的对话都标记为已读
# Version 0.20200712A:
# 1. 在登出和退出时先检查并关闭线程
# 2. 发现一些bug：聊天时显示的是姓名而不是昵称，消息显示2变，别的用户的新消息没有被第二个线程读取出来，都解决了
# 3. 在MyFrame中梳理所有类变量的命名并加上注释
# 4. 通过在登录时加入Freeze和Thaw方法解决界面显露刷新痕迹的问题
# 5. 解决两人之间没对话的时候，历史消息窗口显示别人消息的问题,self.messageList忘了事先清空了
# 6. 将两个线程都改为不是一直不停的运行了，一直运行等于是在对云服务器发动网络攻击，初学者切记不要这样！！！
# 7. 两个线程改为定时运行后，middlePanel刷新线程出现问题，
# Version 0.20200712B:
# 1. 针对12A登出后再登录，在不点取任何聊天对象头像时，程序不停地报错的故障，经分析认为，故障原因是：之前的登出操作已经将
# topPanel中的空间全部Destroy了，再登录后，由于没选取聊天对象，并没有建立相关的控件，但是却启动了控件内容刷新，导致报错。
# 检查发现确实是CreateTopPanel方法在重新登录的时候忘记调用了，加入对应的代码就解决了。
# 2. 登出后又是会在OnUpdateNewMessages方法中报TextCtrl已被删除的错，分析认为故障原因是：线程停止时消息已被发出，所以还
# 会触发一次更新新消息事件导致出错。
# 3. 增加了用户头像功能，头像现在是存在数据库中的了，但还缺乏用户自己修改头像的界面
# Version 0.20200713A:
# 1. 原来的版本由于功能是一个一个后来加入的，导致程序结构存在严重的问题。从这个版本开始对程序结构进行大手术，
# 这在大型的应用软件开发过程中是经常出现的现象。限于程序的水平和经验，刚开始架构程序的时候没有考虑到全部的情况，
# 导致初始架构不合理，之后需要尽早进行梳理和改变（适合初学者练习）
# Version 0.20200713C:
# 1. 完成页面布局梳理（适合初学者练习）
# 2. 完成个人属性修改存盘，打开图片文件并将其保存为头像（适合初学者练习）
# 3. 密码修改时的BUG已改正,但密码正则表达式检验功能还需加入。（适合初学者练习）
# Version 0.20200714A:
# 1. 在新结构下，部分恢复信息显示功能（适合初学者练习）
# 2. 完善了个人属性信息修改功能（适合初学者练习）
# 3. 增加个人二维码显示功能（适合初学者练习）
# Version 0.20200714B:
# 1. 实现系统参数设置类MyConfig，其它所有需要配置参数的类都要以此为基类，继承并派生自己的参数设置类，并制定一个关键字作为自己的标识，
# 所有需要设置的参数都存储在一个配置文件中（setup.cfg)，每个关键字占一行，可通过参数设置类内的方法各自控制读写更新。所有需要设置参数
# 的类都可以此为基础，构建自己的参数接口，包括参数设置界面（对话框），但是需要加密的信息不应放在setup.cfg中（因为setup.cfg为文本文件，
# 并未加密）（不适合初学者练习）
# 2. 完成了数据库的参数设置类，并成功实现了参数设置功能，但写item，和数据库的设置面板还需要完成（不适合初学者练习）
# Version 0.20200715A:
# 1. 进一步完善数据库参数设置功能，加入数据库设置面板（不适合初学者练习）
# 2. 建立了IP地址显示及输入的专用类，使用Validator方法，实现输入数据的合理化检查（不适合初学者练习）
# 3. 基于IP地址文本编辑类，构建了MySQL数据库服务器配置面板类，及MySQL服务器配置对话框类（不适合初学者练习）
# 4. 发现几个bug，需要深入的检查和优化（适合初学者练习，但是当时没仔细记是哪些BUG，现在想不起来了）
# Version 0.20200715B:
# 1. Validator方法还没完全搞清楚，去掉了，换成事件相应方式进行合理化检查（不适合初学者练习）
# 2. 完善了参数设置类，并将其应用到数据库参数设置上，取得较好的效果（不适合初学者练习）
# 3. 把HistoryMessage改到一个独立的类里面去了，方便之后的线程更新操作（增加功能）
# 4. 把聊天的功能加回来（增加功能）
# Version 0.20200716A:
# 1. 把bottomPNL单独封装成一个类为后面的复杂功能操作做准备（增加功能）
# 2. 发现了一次bug：以ddh身份登录，但好友却是ddh，wzh，qwj和lyb，无法复现，无法跟踪定位，所以未解决
# Version 0.20200716B:
# 1. 给姊涵做了个例子，能够显示浮出窗口（之后会被删除）
# 2. 开始构造能显示包含图形消息的historyMessagePanel（增加功能）
# Version 0.20200716C:
# 1. 在middlePanel里把基于线程的刷新功能恢复（增加功能）
# Version 0.20200717A:
# 1. 处理了修改密码时的BUG（很适合初学者练习）
# 2. 改正了更换头像后HistoryMessage里头像不更新的问题（适合初学者练习）
# Version 0.20200717B:
# 1. 在HistoryMessage读取完消息后，将数据库中未读状态清除 (适合初学者练习）
# 2. 在HistoryMessage面板上增加历史聊天记录的时间显示功能：连续两条聊天记录的间隔时间大于20分钟，
# 则在中间插入一个聊天时间显示 (适合初学者练习）
# 3. 发现实时聊天时间不能导致middlePanel的信息更新
# Version 0.20200717C:
# 1. 给历史消息窗口，增加了字体设置功能，仍需细化（适合初学者练习）
# 2. 解决停止线程的逻辑错误，把线程里的那个try处理掉。（适合初学者练习）
# 总结：程序登出或退出前一定要解决几个事，否则会报错；停时钟，停线程
# 3 发现1个bug：以用户A登录，点其头像打开其历史聊天窗口，然后登出，再登录，还点其头像，
# 此时应该再次打开他的历史聊天窗口，但没打开。已解决（）（适合初学者练习）
# Version 0.20200718A:
# 1. 从这个版本开始，给OurChat增加除文字外的其它聊天方式，如：图片，表情，语音，视频。。。
# 2. 调整ourchat表单结构，增加'对话类型'字段
# 3. 使能currentMessagePNL里的一个按钮，用于视频传输测试
# 4. 最终实现了2帧/秒的视频效果，非常不理想，看来视频聊天采用的不是通用数据库存储技术，应该是专门的视频/音频数据流，
# 0718A版本作为一个不成功版本虽保留但不继续开发；后面的版本改进在0717C的基础上进行。
# Version 0.20200719A:
# 1. 在0717C基础上：把窗口大小改变时布局出错的问题解决了
# 2. 解决退出时由于没有区分checkin或checkout状态，而导致的在checkout状态下退出会因为试图关闭不存在的线程而出错的问题
# 3. 解决构建历史消息面板时由于当前二人没有消息记录而导致构建面板是报错的问题
# 4. 发现直接点击窗口右上角的叉号和通过菜单关闭窗口调用的方法是不一样的，
# 直接点叉调用的不是OnExit方法，因此没有关闭线程及时钟的操作，会导致一定概率的报错现象发生，
# 原来直接点叉触发的是wx.EVT_CLOSE这个wx内部事件，把它和self.OnEXit()绑定在一起问题就解决了
#Version 0.20200721A:
# 1. 增加多地同时登录的踢出功能
# 计划解决：
# 2. 考虑到要收发图片、语音等信息，需要将数据库结构进行调整，加大message字段的容量，增加消息类型字段
#Version 0.20200725A:
# 1. 通过自定义图标按钮，解决新消息数量的红圈显示

def main():
    app = wx.App()
    win = MainFrame(None, title="我们自己的线上聊天小程序! (Version %s)" % VERSION, size=wx.Size(850, 800))
    win.Centre()
    win.Show()
    app.MainLoop()


main()
